#include <stdio.h>
#include <conio.h>
#include <locale>
#include <windows.h>

int a[3][3];// объявляем  текущее поле  3 строки и 3 столбца. если  нет ничего то поле 0, если нолик,  то  1, если крестик то 2 

// обнуление поля

void null()
{
    int i, j;

    //  пробегаем по всем строкам
    for (i = 0; i < 3; i++)
    {
        // пробегаем по всем столбцам
        for (j = 0; j < 3; j++)
        {
            a[i][j] = 0;
        }
    }
}

// вывод  поля на экран

void visual()
{
    setlocale(LC_ALL, "Rus");
    int i, j;
    printf("  1 2 3\n");

    //  пробегаем по всем строкам  
    for (i = 0; i < 3; i++)
    {
        printf("%d", i + 1);
        // пробегаем по всем столбцам      
        for (j = 0; j < 3; j++)
        {
            if (a[i][j] == 0) { printf("| "); };
            if (a[i][j] == 1) { printf("|O"); };
            if (a[i][j] == 2) { printf("|X"); };
        }

        // переходим на следующую строку 

        printf("|\n");
        printf("________\n");
    }
}

// Ход игрока n - номер игрока На выходе: 0 - 

void move(int n)
{
    int hi;// ход игрока
    int sto; //  номер столбца в ходе
    int str; // номер строки в ходе
    int ver = 0; // проверка на корректность хода, если нельзя сделать такой ход то 0, если можно то 1
    // запрашиваем ход,  пока не будет введен корректный ход

    while (ver == 0)
    {
        // ввод хода
        printf("Ваш ход. Введите номер строки и столбца. \n");
        scanf_s("%d", &hi);

        // определяем номер столбца - это последняя цифра в ходе
        sto = hi % 10;

        // определяем номер строки хода - это первая цифра
        str = (hi - sto) / 10;

        // проверка корректности хода, клетка должна быть пуста и номер должен быть один из номеров таблицы 3 на 3
        if (a[str - 1][sto - 1] == 0 && (hi == 11 || hi == 12 || hi == 13 || hi == 21 || hi == 22 || hi == 23 || hi == 31 || hi == 32 || hi == 33)) (ver = 1);
    }

    // если  ходил игрок 1 то поле хода  1
    if (n == 1) { a[str - 1][sto - 1] = 1; }
    // если  ходил игрок 2  то поле хода 2
    if (n == 2) { a[str - 1][sto - 1] = 2; }
}

// Проверка  Если ни один игрок не выиграл то 0, если выиграл нолик то 1 если выиграл крестик то 2
int check()
{
    int i;
    int res; // Постоянная проверка. Если ни один игрок не выиграл то 0, если выиграл нолик то 1 если выиграл крестик то 2
    res = 0;
    for (int i = 0; i < 3; i++)
    {
        int b, c, d;
        b = a[i][0];
        c = a[i][1];
        d = a[i][2];
        // проверка  все ли в строке нолики
        __asm {
            mov ebx, 1 //1 это 0
            mov eax, b
            cmp eax, ebx  // сравнение слов из eax и ebx
            je cont1 // переход, если равно, на cont1
            jne next1 // переход, если не равно, на next1
            cont1 :
            mov eax, c
                cmp eax, ebx
                je cont2
                jne next1
                cont2 :
            mov eax, d
                cmp eax, ebx
                je  res1
                jne next1
        }
        __asm { next1: }

    }
    for (int i = 0; i < 3; i++)
    {
        int b, c, d;
        b = a[i][0];
        c = a[i][1];
        d = a[i][2];
        // проверка  все ли в строке крестики
        __asm {
            mov ebx, 2
            mov eax, b
            cmp eax, ebx
            je cont3
            jne next2
            cont3 :
            mov eax, c
                cmp eax, ebx
                je cont4
                jne next2
                cont4 :
            mov eax, d
                cmp eax, ebx
                je  res2
                jne next2
        }
        __asm { next2: }
    }
    for (int i = 0; i < 3; i++)
    {
        int b, c, d;
        b = a[0][i];
        c = a[1][i];
        d = a[2][i];
        // проверка  все ли в столбике нолики
        __asm {
            mov ebx, 1
            mov eax, b
            cmp eax, ebx
            je cont5
            jne next3
            cont5 :
            mov eax, c
                cmp eax, ebx
                je cont6
                jne next3
                cont6 :
            mov eax, d
                cmp eax, ebx
                je  res1
                jne next3
        }
        __asm { next3: }

    }
    for (int i = 0; i < 3; i++)
    {
        int b, c, d;
        b = a[0][i];
        c = a[1][i];
        d = a[2][i];
        // проверка  все ли в столбике крестики
        __asm {
            mov ebx, 2
            mov eax, b
            cmp eax, ebx
            je cont7
            jne next4
            cont7 :
            mov eax, c
                cmp eax, ebx
                je cont8
                jne next4
                cont8 :
            mov eax, d
                cmp eax, ebx
                je  res2
                jne next4
        }
        __asm { next4: }
    }
    __asm {
        jmp end1
        res1 :
        mov res, 1
            jmp end1
            res2 :
        mov res, 2
            jmp end1
            end1 :
    }
    //проверка диагоналей
    if (a[0][0] == 1 && a[1][1] == 1 && a[2][2] == 1) { __asm { mov res, 1} }
    if (a[0][2] == 1 && a[1][1] == 1 && a[2][0] == 1) { __asm { mov res, 1} }
    if (a[0][0] == 2 && a[1][1] == 2 && a[2][2] == 2) { __asm { mov res, 2} }
    if (a[0][2] == 2 && a[1][1] == 2 && a[2][0] == 2) { __asm { mov res, 2} }
    return res;
}

int main()
{
    while (true)
    {
        int game;// состояние игры если победил нолик то 1 , если победил крестик то 2 если никто пока не победил то 0
        // обнуляем очищаем поле
        null();
        // отображаем игровое поле
        visual();
        game = 0;
        int countOfMoves = 0;

        // пока никто не победил продолжается игра

        while (game == 0)
        {
            // ход 1 го игрока нолика
            move(1);
            //очистка консоли,чтобы не мозолить глаза
            system("cls");
            // отображаем игровое поле
            visual();
            // проверка на победу первого игрока
            game = check();
            // если первый игрок не победил , то ходит второй игрок

            if (game == 0 & countOfMoves != 4)
            {
                countOfMoves++;
                // ход второго игрока
                move(2);
                //очистка консоли,чтобы не мозолить глаза
                system("cls");
                // отображаем игровое поле
                visual();
                // проверка на победу второго игрока
                game = check();
            }
            else
            {
                break;
            }
        }

        // отображение результатов игры
        if (game == 0) { printf("Ничья"); }
        if (game == 1) { printf("Победил нолик\n"); };
        if (game == 2) { printf("Победил крестик\n"); };
        Sleep(10000);
        system("cls");
    }
}
